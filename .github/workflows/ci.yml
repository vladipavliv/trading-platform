name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: hft_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Cleanup previous docker containers
      run: docker rm -f hft-postgres || true

    - name: Remove existing postgres containers
      run: docker ps -q --filter "ancestor=postgres:15" | xargs -r docker rm -f

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Create Docker network
      run: docker network create hft-network

    - name: Start PostgreSQL
      run: |
        docker run -d --name hft-postgres --network hft-network \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_PASSWORD=password \
          -e POSTGRES_DB=hft_db \
          -p 5432:5432 \
          postgres:15

    - name: Build Docker image with cache
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: hft-platform:latest
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Wait for Postgres to be ready
      run: |
          until docker exec hft-postgres pg_isready -U postgres; do
            echo "Waiting for Postgres in container..."
            sleep 1
          done

    - name: Run unit tests
      run: |
        docker run --rm hft-platform /bin/bash -c "cd /app/build && ctest"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Setup Python venv and install requirements
      run: ./scripts/setup_venv.sh

    - name: Run Postgres setup + integration tests in Docker
      run: |
        docker run --rm --network hft-network \
          -e POSTGRES_HOST=hft-postgres \
          -e POSTGRES_PORT=5432 \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_PASSWORD=password \
          -e POSTGRES_DB=hft_db \
          hft-platform /bin/bash -c "source /app/venv/bin/activate && python3 scripts/setup_postgres.py && ./tests/integration/it_run.sh"

    - name: Cleanup Docker network
      if: always()
      run: |
        docker rm -f hft-postgres || true
        docker network rm hft-network || true